spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
spring.session.jdbc.initialize-schema=always
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.continue-on-error=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.sql.init.mode=always
#spring.datasource.username=sa
#spring.datasource.password=
spring.h2.console.path=/h2-console
spring.h2.console.enabled=true

#spring.datasource.url=jdbc:h2:mem:pm-db
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.H2Dialect



# Set to the Postgres user you want to connect to; 'postgres' is the default user.
spring.datasource.username=postgres
spring.datasource.password=Test@12345
spring.cloud.gcp.sql.database-name=postgrespr
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=springboot-cloudrun-417018:us-west1:postgres-pr-spring-crun
# So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
# Enforces database initialization
spring.datasource.initialization-mode=always
spring.cloud.gcp.project-id=springboot-cloudrun-417018
#spring.cloud.gcp.credentials.location=file:/path/to/service-account.json
